{"version":3,"sources":["redux/actions.js","redux/reducer.js","redux/store.js","components/ContactForm/ContactForm.styled.js","components/ContactForm/ContactForm.js","components/Filter/Filter.styled.js","components/Filter/Filter.js","components/ContactList/ContactList.styled.js","components/ContactList/ContactList.js","App.GlobalStyle.js","App.js","index.js"],"names":["addContact","createAction","deleteContact","changeFilter","itemReducer","createReducer","state","payload","filter","id","filterReducer","_","rootReducer","combineReducers","items","persistConfig","key","storage","blacklist","persistedReducer","persistReducer","store","configureStore","reducer","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","persistor","persistStore","AddContactButton","styled","button","InputValue","input","ContactForm","useState","name","setName","number","setNumber","dispatch","useDispatch","useSelector","handleChange","event","target","value","checkExistContact","some","item","toLowerCase","reset","onSubmit","preventDefault","toast","error","nanoid","type","onChange","pattern","title","required","Filter","DeleteContactButton","getFilteredContacts","trim","normalizedFilter","includes","ContactList","map","onClick","Global","createGlobalStyle","PhoneBookContainer","div","App","length","ReactDOM","render","StrictMode","loading","document","getElementById"],"mappings":"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","file":"static/js/main.8d3e76cd.chunk.js","sourcesContent":["import { createAction } from '@reduxjs/toolkit';\r\n\r\nexport const addContact = createAction('items/addContact');\r\nexport const deleteContact = createAction('items/deleteContact');\r\nexport const changeFilter = createAction('filter/changeFilter');\r\n","import { createReducer, combineReducers } from '@reduxjs/toolkit';\r\nimport { addContact, deleteContact, changeFilter } from './actions';\r\n\r\nexport const itemReducer = createReducer([], {\r\n  [addContact]: (state, { payload }) => [...state, payload],\r\n\r\n  [deleteContact]: (state, { payload }) =>\r\n    state.filter(({ id }) => id !== payload.id),\r\n});\r\n\r\nexport const filterReducer = createReducer('', {\r\n  [changeFilter]: (_, { payload }) => payload,\r\n});\r\n\r\nexport const rootReducer = combineReducers({\r\n  items: itemReducer,\r\n  filter: filterReducer,\r\n});\r\n","import { configureStore } from '@reduxjs/toolkit';\r\nimport {\r\n  persistStore,\r\n  persistReducer,\r\n  FLUSH,\r\n  REHYDRATE,\r\n  PAUSE,\r\n  PERSIST,\r\n  PURGE,\r\n  REGISTER,\r\n} from 'redux-persist';\r\nimport storage from 'redux-persist/lib/storage';\r\nimport { rootReducer } from './reducer';\r\n\r\nconst persistConfig = { key: 'contacts', storage, blacklist: ['filter'] };\r\nconst persistedReducer = persistReducer(persistConfig, rootReducer);\r\n\r\nexport const store = configureStore({\r\n  reducer: persistedReducer,\r\n  middleware: getDefaultMiddleware =>\r\n    getDefaultMiddleware({\r\n      serializableCheck: {\r\n        ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n      },\r\n    }),\r\n});\r\n\r\nexport const persistor = persistStore(store);\r\n","import styled from 'styled-components';\r\n\r\nexport const AddContactButton = styled.button`\r\n   {\r\n    padding: 5px 30px;\r\n    margin: 10px;\r\n    border: 1px solid #ccc;\r\n    border-radius: 10%;\r\n    box-shadow: 0px 4px 10px 2px rgba(black, 0.2);\r\n    font-weight: bold;\r\n    color: #00ff00;\r\n    cursor: pointer;\r\n  }\r\n`;\r\nexport const InputValue = styled.input`\r\n   {\r\n    padding: 5px;\r\n    margin: 10px;\r\n    background-color: #efefef;\r\n    border-color: #cccccc;\r\n  }\r\n`;\r\n","import { useState } from 'react';\nimport toast, { Toaster } from 'react-hot-toast';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addContact } from '../../redux/actions';\nimport { nanoid } from 'nanoid';\nimport { AddContactButton, InputValue } from './ContactForm.styled';\n\nexport default function ContactForm() {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const dispatch = useDispatch();\n  const items = useSelector(state => state.items);\n\n  const handleChange = event => {\n    const { name, value } = event.target;\n\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n      case 'number':\n        setNumber(value);\n        break;\n      default:\n        return;\n    }\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n\n    if (checkExistContact(name)) {\n      toast.error('This Name is already exists !');\n      reset();\n      return;\n    }\n    dispatch(addContact({ id: nanoid(5), name, number }));\n    reset();\n  };\n\n  const checkExistContact = name => {\n    const result = items.some(\n      item => item.name.toLowerCase() === name.toLowerCase(),\n    );\n\n    if (result) {\n      return 1;\n    }\n  };\n\n  const reset = () => {\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <>\n      <Toaster />\n      <form onSubmit={handleSubmit}>\n        <label>\n          Name:&nbsp;&nbsp;&nbsp;\n          <InputValue\n            type=\"text\"\n            name=\"name\"\n            value={name}\n            onChange={handleChange}\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n            required\n          />\n        </label>\n        <br />\n        <label>\n          Number:\n          <InputValue\n            type=\"tel\"\n            name=\"number\"\n            value={number}\n            onChange={handleChange}\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n            required\n          />\n        </label>\n        <br />\n        <AddContactButton type=\"submit\">Add contact</AddContactButton>\n      </form>\n    </>\n  );\n}\n","import styled from 'styled-components';\r\n\r\nexport const InputValue = styled.input`\r\n   {\r\n    padding: 5px;\r\n    margin: 10px;\r\n    background-color: #efefef;\r\n    border-color: #cccccc;\r\n  }\r\n`;\r\n","import { useSelector, useDispatch } from 'react-redux';\nimport { changeFilter } from '../../redux/actions';\nimport { InputValue } from './Filter.styled';\n\nexport default function Filter() {\n  const dispatch = useDispatch();\n  const filter = useSelector(state => state.filter);\n\n  const checkFilter = event => {\n    dispatch(changeFilter(event.target.value));\n  };\n\n  return (\n    <label>\n      <i>Find contacts by name</i>\n      <InputValue type=\"text\" value={filter} onChange={checkFilter} />\n    </label>\n  );\n}\n","import styled from 'styled-components';\r\n\r\nexport const DeleteContactButton = styled.button`\r\n   {\r\n    padding: 5px 20px;\r\n    margin: 10px;\r\n    border: 1px solid #ccc;\r\n    border-radius: 10%;\r\n    box-shadow: 0px 4px 10px 2px rgba(black, 0.2);\r\n    color: #ff0000;\r\n    border-color: #cccccc;\r\n    cursor: pointer;\r\n  }\r\n`;\r\n","import { useSelector, useDispatch } from 'react-redux';\nimport { deleteContact } from '../../redux/actions';\nimport { DeleteContactButton } from './ContactList.styled';\n\nconst getFilteredContacts = (items, filter) => {\n  if (filter.trim() === '') {\n    return items;\n  }\n  const normalizedFilter = filter.toLowerCase();\n  return items.filter(item =>\n    item.name.toLowerCase().includes(normalizedFilter),\n  );\n};\n\nconst ContactList = () => {\n  const dispatch = useDispatch();\n\n  const filter = useSelector(state => state.filter);\n  const items = useSelector(state => state.items);\n\n  return (\n    <ul>\n      {getFilteredContacts(items, filter).map(({ id, name, number }) => (\n        <li key={id}>\n          {name}: {number}\n          <DeleteContactButton\n            type=\"button\"\n            name=\"delete\"\n            onClick={() => dispatch(deleteContact({ id }))}\n          >\n            Delete\n          </DeleteContactButton>\n        </li>\n      ))}\n    </ul>\n  );\n};\n\nexport default ContactList;\n","import styled, { createGlobalStyle } from 'styled-components';\r\n\r\nexport const Global = createGlobalStyle`\r\n*{\r\n  padding: 0px;\r\n  box-sizing: border-box;\r\n}\r\n\r\nbody {\r\n  font-family: Arial, Helvetica, sans-serif;\r\n  font-size: 20px;\r\n}\r\n\r\nh1, h2{ \r\nmargin: 10px;\r\n}\r\n`;\r\n\r\nexport const PhoneBookContainer = styled.div`\r\n   {\r\n    width: 100%;\r\n  }\r\n`;\r\n","import ContactForm from './components/ContactForm/ContactForm';\nimport Filter from './components/Filter/Filter';\nimport ContactList from './components/ContactList/ContactList';\nimport { useSelector } from 'react-redux';\nimport { Global, PhoneBookContainer } from './App.GlobalStyle';\n\nexport default function App() {\n  const items = useSelector(state => state.items);\n\n  return (\n    <>\n      <Global />\n      <PhoneBookContainer>\n        <h1>Phonebook</h1>\n        <ContactForm />\n        <h2>Contacts</h2>\n        {items.length > 0 && <Filter />}\n        {items.length > 0 ? <ContactList /> : <p>Your phonebook is empty</p>}\n      </PhoneBookContainer>\n    </>\n  );\n}\n","import React from 'react';\nimport { Provider } from 'react-redux';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport { store, persistor } from './redux/store';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <PersistGate loading={null} persistor={persistor}>\n        <App />\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}